{"version":3,"sources":["chat/BotMessage.js","chat/UserMessage.js","chat/ChatMessageList.js","App.js","index.js"],"names":["BotMessage","chatMessage","blockStyle","display","marginLeft","padding","borderRadius","className","from","style","height","backgroundColor","width","textAlign","icon","robotHappyOutline","color","message","id","UserMessage","boyLightSkinTone","ChatMessageList","chatMessages","map","App","useState","uuidv4","setChatMessages","messageToSendRef","useRef","marginRight","marginTop","overflow","ref","type","onClick","e","console","log","currentMessage","current","value","currentMessages","bodyFormData","FormData","append","Promise","resolve","reject","axios","method","url","BASE_URL","data","headers","then","res","catch","err","stat","msg","postChatRequest","resp","reply","ReactDOM","render","document","getElementById"],"mappings":"kPAKe,SAASA,EAAT,GAAoC,IAAfC,EAAc,EAAdA,YAM1BC,EAAa,CACfC,QAAS,eACTC,WAAY,OACZC,QAAS,MACTC,aAAc,QAelB,OACI,8BACI,qBAAKC,UAAWN,EAAYO,KAAMC,MAzB5B,CACVC,OAAQ,QAwBJ,SACI,gCACI,mBAAGD,MAAK,2BAAMP,GAXjB,CACTS,gBAAiB,QACjBD,OAAQ,OACRE,MAAO,OACPC,UAAU,WAOE,SACI,cAAC,OAAD,CAAMC,KAAMC,QAEhB,mBAAGN,MAAK,2BAAMP,GAnBT,CACjBS,gBAAiB,UACjBK,MAAO,UAiBK,SAA6Cf,EAAYgB,gBAN3DhB,EAAYiB,I,YC1Bf,SAASC,EAAT,GAAqC,IAAflB,EAAc,EAAdA,YAO3BC,EAAa,CACfC,QAAS,eACTC,WAAY,OACZC,QAAS,MACTC,aAAc,QAgBlB,OACI,8BACI,qBAAKC,UAAWN,EAAYO,KAAMC,MA3B5B,CACVC,OAAQ,OACRG,UAAW,SAyBP,SACI,gCACI,mBAAGJ,MAAK,2BAAMP,GAjBT,CACjBS,gBAAiB,UACjBK,MAAO,UAeK,SAA6Cf,EAAYgB,UACzD,mBAAGR,MAAK,2BAAMP,GAbjB,CACTS,gBAAiB,QACjBD,OAAQ,OACRE,MAAO,OACPC,UAAU,WASE,SACI,cAAC,OAAD,CAAMC,KAAMM,cALlBnB,EAAYiB,IC7Bf,SAASG,EAAT,GAEX,OAFoD,EAAfC,aAEjBC,KAChB,SAAAtB,GACI,MAAyB,SAArBA,EAAYO,KACL,cAACW,EAAD,CAAalB,YAAaA,IAI9B,cAACD,EAAD,CAAYC,YAAaA,O,6BCwF7BuB,MApEf,WAAgB,IAAD,EAE0BC,mBAAS,CAChD,CAACP,GAAIQ,cAAUlB,KAAM,UAAWS,QAAS,kCAH5B,mBAEPK,EAFO,KAEOK,EAFP,KAMRC,EAAmBC,mBAiDzB,OACC,sBAAKtB,UAAU,MAAME,MAhBL,CAChBL,WAAY,MACZ0B,YAAa,OAcb,UACC,qBAAKrB,MAZW,CACjBsB,UAAW,KACXrB,OAAQ,QACRL,QAAS,OACTF,QAAS,QACT6B,SAAS,SACTrB,gBAAiB,WAMhB,SACC,cAACU,EAAD,CAAiBC,aAAcA,MAEhC,gCACC,uBAAOW,IAAKL,EAAkBM,KAAK,SACnC,wBAAQC,QAtDX,SAA4BC,GAC3BC,QAAQC,IAAI,wBAEZ,IAAMC,EAAiBX,EAAiBY,QAAQC,MACzB,KAAnBF,GAKJF,QAAQC,IAAR,+BAAoCC,IAKpCZ,GAAgB,SAAAe,GACf,MAAM,GAAN,mBAAWA,GAAX,CACC,CAACxB,GAAIQ,cAAUlB,KAAM,OAAQS,QAASsB,QAjDpB,SAACtB,GAEtB,IAAI0B,EAAe,IAAIC,SAGpB,OAFHD,EAAaE,OAAO,UAAW5B,GAErB,IAAI6B,SAAQ,SAACC,EAASC,GACzBC,IAAM,CACXC,OAAQ,OACRC,IAAKC,6BACLC,KAAMV,EACNW,QAAS,CAAC,eAAgB,yBAE1BC,MAAK,SAAAC,GACLT,EAAQS,EAAIH,SAEZI,OAAM,SAAAC,GACLV,EAAO,CACNW,KAAM,IACNC,IACC,+EAkCJC,CAAgBtB,GAAgBgB,MAAK,SAAAO,GACpCnC,GAAgB,SAAAe,GACf,MAAM,GAAN,mBAAWA,GAAX,CACC,CAACxB,GAAIQ,cAAUlB,KAAM,UAAWS,QAAS6C,EAAKC,eAKjDnC,EAAiBY,QAAQC,MAAQ,MAvBhCJ,QAAQC,IAAI,4CAiDX,yB,MC1FJ0B,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.f8fa42fd.chunk.js","sourcesContent":["import React from 'react'\n// npm install --save-dev @iconify/react @iconify-icons/mdi\nimport { Icon, InlineIcon } from '@iconify/react';\nimport robotHappyOutline from '@iconify-icons/mdi/robot-happy-outline';\n\nexport default function BotMessage({chatMessage}) {\n\n    const style = {\n        height: \"40px\",\n    }\n\n    const blockStyle = {\n        display: \"inline-block\",\n        marginLeft: \"10px\",\n        padding: \"5px\",\n        borderRadius: \"15px\"\n    }\n\n    const messageStyle = {\n        backgroundColor: \"#1F3472\",\n        color: \"white\"\n    }\n\n    const icon = {\n        backgroundColor: \"white\",\n        height: \"20px\",\n        width: \"20px\",\n        textAlign:\"center\"\n    }\n\n    return (\n        <div key={chatMessage.id}>\n            <div className={chatMessage.from} style={style}>\n                <div>\n                    <p style={{...blockStyle, ...icon}}>\n                        <Icon icon={robotHappyOutline} />\n                    </p>\n                    <p style={{...blockStyle, ...messageStyle}}>{chatMessage.message}</p>\n                </div>\n            </div>\n        </div>\n    )   \n}\n","import React from 'react'\n// npm install --save-dev @iconify/react @iconify-icons/emojione\nimport { Icon, InlineIcon } from '@iconify/react';\nimport boyLightSkinTone from '@iconify-icons/emojione/boy-light-skin-tone';\n\nexport default function UserMessage({chatMessage}) {\n\n    const style = {\n        height: \"40px\",\n        textAlign: \"right\"\n    }\n\n    const blockStyle = {\n        display: \"inline-block\",\n        marginLeft: \"10px\",\n        padding: \"5px\",\n        borderRadius: \"15px\"\n    }\n\n    const messageStyle = {\n        backgroundColor: \"#44486F\",\n        color: \"white\"\n    }\n\n    const icon = {\n        backgroundColor: \"white\",\n        height: \"20px\",\n        width: \"20px\",\n        textAlign:\"center\"\n    }\n\n\n    return (\n        <div key={chatMessage.id}>\n            <div className={chatMessage.from} style={style}>\n                <div>\n                    <p style={{...blockStyle, ...messageStyle}}>{chatMessage.message}</p>\n                    <p style={{...blockStyle, ...icon}}>\n                        <Icon icon={boyLightSkinTone} />\n                    </p>\n                </div>\n            </div>\n        </div>\n    )   \n}\n","import React from 'react'\nimport BotMessage from './BotMessage'\nimport UserMessage from './UserMessage'\n\nexport default function ChatMessageList({chatMessages}) {\n\n    return chatMessages.map(\n        chatMessage => {\n            if (chatMessage.from === \"user\") {\n                return <UserMessage chatMessage={chatMessage} />\n            }\n\n            // else chatbot\n            return <BotMessage chatMessage={chatMessage} />\n\n        }\n    )\n}\n","import './App.css';\nimport React, { useState , useRef } from 'react';\nimport ChatMessageList from './chat/ChatMessageList'\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from \"axios\";\n\nconst BASE_URL = \"http://localhost:8080\"\n\nlet postChatRequest = (message) => {\n\n\tlet bodyFormData = new FormData();\n\tbodyFormData.append('content', message);\n\n    return new Promise((resolve, reject) => {\n        axios({\n\t\t\tmethod: \"post\",\n\t\t\turl: BASE_URL + \"/chat\",\n\t\t\tdata: bodyFormData,\n\t\t\theaders: {'Content-Type': 'multipart/form-data' }\n\t\t})\n\t\t.then(res => {\n\t\t\tresolve(res.data);\n\t\t})\n\t\t.catch(err => {\n\t\t\t\treject({\n\t\t\t\t\tstat: 500,\n\t\t\t\t\tmsg:\n\t\t\t\t\t\t\"There was an error processing your request. Please, try again later.\"\n\t\t\t\t});\n\t\t});\n    });\n} \n\nfunction App() {\n\n\tconst [chatMessages, setChatMessages] = useState([\n\t\t{id: uuidv4(), from: \"chatbot\", message: \"Hello there! How can I help?\"},\n\t])\n\n\tconst messageToSendRef = useRef()\n\n\tfunction handleChatFunction(e) {\n\t\tconsole.log(\"[handleChatFunction]\")\n\n\t\tconst currentMessage = messageToSendRef.current.value\n\t\tif (currentMessage === '') {\n\t\t\tconsole.log(\"[handleChatFunction] Blank Chat Message\")\n\t\t\treturn \n\t\t}\n\n\t\tconsole.log(`[handleChatFunction] ${currentMessage}`) // `This is ${soMany} times easier!`\n\n\t\t// talk to chatbot // POST http://localhost:8080/chat\n\t\t// form data containing : content: currentMessage\n\t\t\n\t\tsetChatMessages(currentMessages => {\n\t\t\treturn [...currentMessages, \n\t\t\t\t{id: uuidv4(), from: \"user\", message: currentMessage}\n\t\t\t]\n\t\t})\n\n\t\tpostChatRequest(currentMessage).then(resp => {\n\t\t\tsetChatMessages(currentMessages => {\n\t\t\t\treturn [...currentMessages, \n\t\t\t\t\t{id: uuidv4(), from: \"chatbot\", message: resp.reply}\n\t\t\t\t]\n\t\t\t})\n\t\t})\n\n\t\tmessageToSendRef.current.value = null\n\n\t}\n\n\tconst appStyle = {\n\t\tmarginLeft: \"30%\",\n\t\tmarginRight: \"30%\",\n\t}\n\n\tconst chatStyle = {\n\t\tmarginTop: \"5%\",\n\t\theight: \"400px\", \n\t\tpadding: \"10px\",\n\t\tdisplay: \"block\",\n\t\toverflow:\"scroll\",\n\t\tbackgroundColor: \"#878CD6\"\n\t}\n\n\t// Visual Layout\n\treturn (\n\t\t<div className=\"App\" style={appStyle}>\n\t\t\t<div style={chatStyle}>\n\t\t\t\t<ChatMessageList chatMessages={chatMessages}/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input ref={messageToSendRef} type=\"text\"/>\n\t\t\t\t<button onClick={handleChatFunction}>Chat</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}